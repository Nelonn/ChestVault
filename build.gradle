plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'me.nelonn'
version '0.1.0'

repositories {
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    // protectionlib
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'com.github.oraxen:protectionlib:master-SNAPSHOT'
}

compileJava {
    options.encoding = "UTF-8"
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    filesNotMatching(['**/*.png', '**/*.ogg', '**/models/**', '**/textures/**']) {
        expand projectVersion: version
    }
}

shadowJar {
    archiveClassifier = null
}

compileJava.dependsOn clean
build.dependsOn shadowJar